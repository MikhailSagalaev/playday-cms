/**
 * PlayDay CMS - –°–∫—Ä–∏–ø—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
 * –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ PlayDay CMS –∏ –∑–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
 * 1. –í—Å—Ç–∞–≤—å—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –≤ HTML-–±–ª–æ–∫ —Ñ–æ—Ä–º—ã –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ Tilda Members
 * 2. –£–∫–∞–∂–∏—Ç–µ ID –±–ª–æ–∫–∞ —Ñ–æ—Ä–º—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π FORM_BLOCK_ID
 * 3. –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–≥—Ä—É–∑–∏—Ç –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ API
 */

(function() {
  'use strict';
  
  // ===========================================
  // –ù–ê–°–¢–†–û–ô–ö–ò
  // ===========================================
  
  // URL –≤–∞—à–µ–≥–æ PlayDay CMS API
  const PLAYDAY_API_URL = 'https://api.play-day.ru/api/public/location';
  
  // ID –±–ª–æ–∫–∞ —Ñ–æ—Ä–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä: 'rec759480568')
  const FORM_BLOCK_ID = 'rec759480568'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ ID –≤–∞—à–µ–≥–æ –±–ª–æ–∫–∞
  
  // ===========================================
  // –û–°–ù–û–í–ù–û–ô –ö–û–î
  // ===========================================
  
  $(document).ready(function() {
    const block_id = FORM_BLOCK_ID.replace('rec', '');
    const block = $('#' + FORM_BLOCK_ID).removeClass('r_hidden').hide();
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Tilda Members
    const project_id = $('#allrecords').attr('data-tilda-project-id');
    const profile = JSON.parse(
      localStorage.getItem(`tilda_members_profile${project_id}`) ||
      localStorage.getItem('memberarea_profile') ||                
      '{}'
    );
    
    if (!profile.email) {
      console.error('‚ùå PlayDay Admin Form: Email –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω');
      block.text('–û—à–∏–±–∫–∞: –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É');
      block.css('text-align', 'center').show();
      return;
    }
    
    console.log('üöÄ PlayDay Admin Form: –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è', profile.email);
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–∫–∞—Ü–∏–∏ –∏–∑ API
    $.ajax({
      url: `${PLAYDAY_API_URL}/${encodeURIComponent(profile.email)}`,
      method: 'GET',
      dataType: 'json',
      success: function(data) {
        if (!data || !data.records || data.records.length === 0) {
          console.warn('‚ö†Ô∏è PlayDay Admin Form: –î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, —Ñ–æ—Ä–º–∞ –±—É–¥–µ—Ç –ø—É—Å—Ç–æ–π');
          block.show();
          return;
        }
        
        const record = data.records[0];
        console.log('‚úÖ PlayDay Admin Form: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã', record);
        
        // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É
        fillForm(block, record);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
        block.show();
        window.dispatchEvent(new Event('resize'));
      },
      error: function(xhr, status, error) {
        console.error('‚ùå PlayDay Admin Form: –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö', error);
        block.text('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö: ' + error);
        block.css('text-align', 'center').show();
      }
    });
  });
  
  /**
   * –ó–∞–ø–æ–ª–Ω—è–µ—Ç —Ñ–æ—Ä–º—É –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ API
   */
  function fillForm(block, record) {
    // –ó–∞–ø–æ–ª–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ–æ—Ä–º—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
    if (record.–Ω–∞–∑–≤–∞–Ω–∏–µ) {
      block.find('.t-section__title').text(record.–Ω–∞–∑–≤–∞–Ω–∏–µ);
    }
    
    if (record.–æ–ø–∏—Å–∞–Ω–∏–µ) {
      block.find('.t-section__descr').html(record.–æ–ø–∏—Å–∞–Ω–∏–µ);
    }
    
    // –û–±—Ö–æ–¥–∏–º –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã
    block.find('.t-input-group').each(function() {
      const item = $(this);
      
      // –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è (email, name, input, url, date, time, range, quantity)
      if (item.hasClass('t-input-group_em') ||
          item.hasClass('t-input-group_nm') ||
          item.hasClass('t-input-group_in') ||
          item.hasClass('t-input-group_ur') ||
          item.hasClass('t-input-group_da') ||
          item.hasClass('t-input-group_tm') ||
          item.hasClass('t-input-group_rg') ||
          item.hasClass('t-input-group_qn')) {
        
        const input = item.find('input');
        const field = input.attr('name');
        
        if (field && field in record && record[field] !== null) {
          input.val(record[field]);
          input.trigger('change');
          input.trigger('keyup');
        }
      }
      
      // –¢–µ–ª–µ—Ñ–æ–Ω–Ω—ã–µ –ø–æ–ª—è
      else if (item.hasClass('t-input-group_ph')) {
        const input = item.find('input').last();
        const field = input.attr('name');
        
        if (field && field in record && record[field] !== null) {
          const input_phonemask = item.find('.t-input-phonemask');
          
          if (input_phonemask.length) {
            const phone_number = String(record[field]).replace(/[^0-9]/g, '');
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã
            item.find('.t-input-phonemask__options-item').each(function() {
              let phone_code = String($(this).attr('data-phonemask-code')).replace(/[^0-9]/g, '');
              if (phone_code && phone_number.startsWith(phone_code)) {
                $(this).click();
              }
            });
            
            input_phonemask.val(record[field]);
            input_phonemask.trigger('input');
            input_phonemask.get(0).dispatchEvent(new Event('input'));
          } else {
            input.val(record[field]);
            input.trigger('change');
          }
        }
      }
      
      // Textarea
      else if (item.hasClass('t-input-group_ta')) {
        const textarea = item.find('textarea');
        const field = textarea.attr('name');
        
        if (field && field in record && record[field] !== null) {
          textarea.val(record[field]);
        }
      }
      
      // Select
      else if (item.hasClass('t-input-group_sb')) {
        const select = item.find('select');
        const field = select.attr('name');
        
        if (field && field in record && record[field] !== null) {
          select.val(record[field]);
        }
      }
      
      // Checkbox
      else if (item.hasClass('t-input-group_cb')) {
        const input = item.find('input');
        const field = input.attr('name');
        
        if (field && field in record && record[field] !== null) {
          input.prop('checked', !!record[field]);
        }
      }
      
      // Radio buttons
      else if (item.hasClass('t-input-group_rd') || item.hasClass('t-input-group_ri')) {
        let field = item.find('input[type="hidden"]').attr('name');
        
        item.find('input').each(function() {
          const input = $(this);
          field = field || input.attr('name');
          const value = input.attr('value');
          
          if (field && field in record && record[field] !== null) {
            const recordValue = String(record[field]);
            if (input.prop('checked') !== recordValue.includes(value)) {
              input[0].click();
            }
          }
        });
      }
      
      // Uploadcare (–∫–∞—Ä—Ç–∏–Ω–∫–∏)
      else if (item.hasClass('t-input-group_uc')) {
        const input = item.find('input');
        const field = input.attr('name');
        
        if (field && field in record && record[field] !== null) {
          // –î–ª—è –æ–¥–∏–Ω–æ—á–Ω–æ–π –∫–∞—Ä—Ç–∏–Ω–∫–∏
          if (typeof record[field] === 'string') {
            input.val(record[field]);
          }
          // –î–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–∏–Ω–æ–∫ (–º–∞—Å—Å–∏–≤)
          else if (Array.isArray(record[field]) && record[field].length > 0) {
            item.find('.uploadcare--widget__button_type_open').click();
            const url_form = $('.uploadcare--tab_name_url form');
            
            record[field].forEach((photo) => {
              const photoUrl = typeof photo === 'object' ? photo.url : photo;
              url_form.find('input').val(photoUrl);
              url_form.submit();
            });
            
            $('button.uploadcare--panel__done').click();
            $('button.uploadcare--dialog__close').click();
          }
        }
      }
    });
    
    // –°–∫—Ä—ã—Ç—ã–µ –ø–æ–ª—è
    block.find('.t-form__inputsbox').children('input[type="hidden"]').each(function() {
      const input = $(this);
      const field = input.attr('name');
      
      if (field && field in record && record[field] !== null) {
        input.val(record[field]);
      }
    });
    
    console.log('‚úÖ PlayDay Admin Form: –§–æ—Ä–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
  }
  
})();

